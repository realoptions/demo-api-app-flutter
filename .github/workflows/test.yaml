# Name of your workflow.
name: test
on: [push, pull_request] # A workflow run is made up of one or more jobs.
jobs:
  test:
    runs-on: ubuntu-latest
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    steps:
    # A name for your step to display on GitHub.
    - uses: actions/checkout@v1
    # Sets up a flutter environment.
    # https://github.com/marketplace/actions/flutter-action
    - uses: subosito/flutter-action@v1
      with:
        flutter_version: '1.14.6'
        channel: 'beta' # or: 'dev' or 'beta'
    - name: "Run Flutter Driver tests"
      run: |
        flutter pub get
        flutter clean
        flutter test --coverage
        bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}
    - name: build apk
      run: |
        flutter build apk --split-per-abi
    
    - name: set flutter version
      run: echo ::set-env name=FLUTTER_VERSION::$(grep 'version:' pubspec.yaml | tail -n1 | cut -c 10-)
    - name: get branch name
      run: echo ::set-env name=BRANCH_NAME::${GITHUB_REF##*/}
    - name: get branch tag
      run: echo ::set-env name=RELEASE_TAG::$([ ${{ env.BRANCH_NAME }} == master ] && echo "release" || echo "alpha")
    - name: get tag
      run: echo ::set-env name=CUSTOM_TAG::${{ env.RELEASE_TAG }}-${{ env.FLUTTER_VERSION }} 
    - name: does tag exist
      run: echo ::set-env name=TAG_DOES_NOT_EXIST::$(git tag | grep -q ${{ env.CUSTOM_TAG }} ; echo $?)
        
    - name: Bump version and push tag
      if: env.TAG_DOES_NOT_EXIST
      run: |
        git config --global user.email "danstahl1138@gmail.com"
        git config --global user.name "phillyfan1138"
        git tag -a ${{ env.CUSTOM_TAG }} -m "Updating to ${{ env.CUSTOM_TAG }}"
        remote_repo="https://${{ github.actor }}:${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }}.git"
        git push $remote_repo  origin ${{ env.CUSTOM_TAG }}
        
        
        #curl --request POST \
        #--url https://api.github.com/repos/${{ github.repository }}/git/tags \
        #--header 'authorization: Bearer ${{ secrets.ACCESS_TOKEN }}' \
        #--header 'content-type: application/json' \
        #--data '{
        #  "tag": "${{ env.CUSTOM_TAG }}",
        #  "message": "Updating to ${{ env.CUSTOM_TAG }}\n",
        #  "object": "${{ github.sha }}",
        #  "type": "commit"
        #}'

      #env:
      #  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #  CUSTOM_TAG: ${{ env.CUSTOM_TAG }}
